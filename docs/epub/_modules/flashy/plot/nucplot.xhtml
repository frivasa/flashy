<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>flashy.plot.nucplot</title>
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for flashy.plot.nucplot</h1><div class="highlight"><pre>
<span></span><span class="kn">from</span> <span class="nn">flashy.nuclear</span> <span class="k">import</span> \
<span class="n">splitSpecies</span><span class="p">,</span> <span class="n">convertYield2Abundance</span><span class="p">,</span> <span class="n">getMassFractions</span><span class="p">,</span>\
<span class="n">getAbundances</span><span class="p">,</span> <span class="n">readSunComp</span><span class="p">,</span> <span class="n">readYield</span><span class="p">,</span> <span class="n">sortNuclides</span><span class="p">,</span>\
<span class="n">elemSplit</span><span class="p">,</span> <span class="n">AGSS09</span><span class="p">,</span> <span class="n">readIsotopicSolar</span>
<span class="kn">from</span> <span class="nn">.globals</span> <span class="k">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">flashy.utils</span> <span class="k">as</span> <span class="nn">ut</span>
<span class="kn">from</span> <span class="nn">flashy.datahaul.hdfdirect</span> <span class="k">import</span> <span class="n">directMeta</span>
<span class="kn">from</span> <span class="nn">matplotlib.patches</span> <span class="k">import</span> <span class="n">Rectangle</span>


<span class="c1"># class patchN(object):</span>
<span class="c1">#     def legend_artist(self, legend, orig_handle, fontsize, handlebox):</span>
<span class="c1">#         x0, y0 = handlebox.xdescent, handlebox.ydescent</span>
<span class="c1">#         width, height = handlebox.width, handlebox.height</span>
<span class="c1">#         patch = Rectangle((x0,y0), height, height)</span>
<span class="c1">#         patch.update_from(orig_handle)</span>
<span class="c1">#         patch.set_transform(handlebox.get_transform())</span>
<span class="c1">#         handlebox.add_artist(patch)</span>
<span class="c1">#         return patch</span>

<div class="viewcode-block" id="speciesYields"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.speciesYields">[docs]</a><span class="k">def</span> <span class="nf">speciesYields</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">,</span> <span class="n">tags</span><span class="o">=</span><span class="p">[],</span> <span class="n">norm</span><span class="o">=</span><span class="s1">&#39;Si&#39;</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="mi">6</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;plots abundances for a list of files or a single file vs solar composition.&quot;&quot;&quot;</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">,</span> <span class="nb">list</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">tags</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;no tags specified.&#39;</span><span class="p">)</span>
            <span class="n">tags</span> <span class="o">=</span> <span class="p">[</span><span class="kc">None</span><span class="p">]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">)</span>
        <span class="n">plabels</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">f</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">):</span>
            <span class="n">ryield</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
            <span class="n">props</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">ax</span><span class="o">.</span><span class="n">_get_lines</span><span class="o">.</span><span class="n">prop_cycler</span><span class="p">)</span>
            <span class="n">col</span> <span class="o">=</span> <span class="n">props</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">]</span> <span class="k">if</span> <span class="n">i</span> <span class="k">else</span> <span class="s1">&#39;k&#39;</span>
            <span class="n">tagspecies</span> <span class="o">=</span> <span class="kc">True</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">i</span> <span class="k">else</span> <span class="kc">False</span>
            <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotAbun</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">,</span> 
                                    <span class="n">color</span><span class="o">=</span><span class="n">col</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">tags</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">tagspecies</span><span class="o">=</span><span class="n">tagspecies</span><span class="p">))</span>
            <span class="n">lg</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="o">*</span><span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">plabels</span><span class="p">))</span>
        <span class="c1"># speciesGrid(ax, modspecies, yoffset=5.0)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">plabels</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">ryield</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">)</span>
        <span class="n">tag</span> <span class="o">=</span> <span class="n">tags</span>
        <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotAbun</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">tag</span><span class="p">,</span> <span class="n">tagspecies</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
        <span class="c1"># plot sun</span>
        <span class="n">zs</span><span class="p">,</span> <span class="n">names</span><span class="p">,</span> <span class="n">mix</span> <span class="o">=</span> <span class="n">readSunComp</span><span class="p">(</span><span class="n">AGSS09</span><span class="p">)</span>
        <span class="n">massF</span> <span class="o">=</span> <span class="n">getMassFractions</span><span class="p">(</span><span class="n">names</span><span class="p">,</span> <span class="n">mix</span><span class="p">)</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">zs</span><span class="p">,</span> <span class="n">getAbundances</span><span class="p">(</span><span class="n">names</span><span class="p">,</span> <span class="n">massF</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">),</span> 
                    <span class="n">marker</span><span class="o">=</span><span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="n">markersize</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;brown&#39;</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">&#39;Sun(AGSS09)&#39;</span><span class="p">)</span>
        <span class="n">lg</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">fig</span></div>


<div class="viewcode-block" id="productionFactor"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.productionFactor">[docs]</a><span class="k">def</span> <span class="nf">productionFactor</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">,</span> <span class="n">tag</span><span class="o">=</span><span class="s1">&#39;Sim vs X&#39;</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="s1">&#39;Si&#39;</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="mi">6</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;plots profuction factors for comparable species in a pair of yields, or vs solar compositon </span>
<span class="sd">    for a single file.</span>
<span class="sd">    yieldfiles = [input, reference]</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">,</span> <span class="nb">list</span><span class="p">):</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">)</span><span class="o">!=</span><span class="mi">2</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Input files must be exactly two.&#39;</span><span class="p">)</span>
            <span class="k">return</span> <span class="kc">None</span>
        <span class="n">plabels</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">ryield</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotPfac</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">refname</span><span class="o">=</span><span class="n">yieldfiles</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span>
                                <span class="n">reftype</span><span class="o">=</span><span class="s1">&#39;yield&#39;</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">tag</span><span class="p">,</span> <span class="n">tagspecies</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
        <span class="n">lg</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
        <span class="c1"># speciesGrid(ax, modspecies, yoffset=5.0)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">plabels</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">ryield</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">yieldfiles</span><span class="p">)</span>
        <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotPfac</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">&#39;Sim vs AGSS09&#39;</span><span class="p">,</span> 
                                <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">,</span> <span class="n">tagspecies</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
        <span class="n">lg</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">fig</span></div>


<div class="viewcode-block" id="nuclideYields"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.nuclideYields">[docs]</a><span class="k">def</span> <span class="nf">nuclideYields</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="n">tags</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;plot mass fractions for each nuclide in a yield file.&quot;&quot;&quot;</span>
    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="nb">list</span><span class="p">):</span>
        <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
        <span class="n">plabels</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="n">tags</span><span class="p">)):</span>
            <span class="n">ryield</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
            <span class="n">props</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">ax</span><span class="o">.</span><span class="n">_get_lines</span><span class="o">.</span><span class="n">prop_cycler</span><span class="p">)</span>
            <span class="n">col</span> <span class="o">=</span> <span class="n">props</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">]</span> <span class="k">if</span> <span class="n">i</span> <span class="k">else</span> <span class="s1">&#39;k&#39;</span>
            <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotIsoMasses</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">notag</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">t</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">col</span><span class="p">))</span>
        <span class="n">lg</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="o">*</span><span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">plabels</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">fig</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
        <span class="n">plabels</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">ryield</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">files</span><span class="p">)</span>
        <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotIsoMasses</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">notag</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">tags</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;k&#39;</span><span class="p">))</span>
        <span class="n">ryield</span> <span class="o">=</span> <span class="n">readIsotopicSolar</span><span class="p">()</span>
        <span class="n">plabels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">plotIsoMasses</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ryield</span><span class="p">,</span> <span class="n">notag</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">&#39;AGSS09&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;orange&#39;</span><span class="p">))</span>
        <span class="n">lg</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="o">*</span><span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">plabels</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">fig</span></div>


<div class="viewcode-block" id="plotNuclideGrid"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.plotNuclideGrid">[docs]</a><span class="k">def</span> <span class="nf">plotNuclideGrid</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">species</span><span class="p">,</span> <span class="n">xmass</span><span class="o">=</span><span class="p">[],</span> <span class="n">z_range</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">35</span><span class="p">],</span> <span class="n">n_range</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">38</span><span class="p">],</span> 
                    <span class="n">boxsize</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">cmmin</span><span class="o">=</span><span class="mf">1.0e-5</span><span class="p">,</span> <span class="n">cmmax</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s1">&#39;Blues&#39;</span><span class="p">,</span> 
                    <span class="n">log</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">addtags</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">invert</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;plots a list of species on a grid.&quot;&quot;&quot;</span>
    <span class="n">cmap</span> <span class="o">=</span> <span class="n">mpl</span><span class="o">.</span><span class="n">cm</span><span class="o">.</span><span class="n">get_cmap</span><span class="p">(</span><span class="n">cmap</span><span class="p">)</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">xmass</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">:</span>
        <span class="n">xis</span> <span class="o">=</span> <span class="n">xmass</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">fakeXi</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">-</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">xis</span> <span class="o">=</span> <span class="p">[</span><span class="n">fakeXi</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">species</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">invert</span><span class="p">:</span>
        <span class="n">clr</span> <span class="o">=</span> <span class="s1">&#39;white&#39;</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">clr</span> <span class="o">=</span> <span class="s1">&#39;black&#39;</span>
    <span class="n">nam</span><span class="p">,</span> <span class="n">zs</span><span class="p">,</span> <span class="n">ns</span><span class="p">,</span> <span class="n">As</span> <span class="o">=</span> <span class="n">splitSpecies</span><span class="p">(</span><span class="n">species</span><span class="p">,</span> <span class="n">standardize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">z</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">xi</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">zs</span><span class="p">,</span> <span class="n">ns</span><span class="p">,</span> <span class="n">xis</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">log</span><span class="p">:</span>
            <span class="n">square</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">Rectangle</span><span class="p">((</span><span class="n">n</span><span class="o">-</span><span class="mf">0.5</span><span class="o">*</span><span class="n">boxsize</span><span class="p">,</span> <span class="n">z</span><span class="o">-</span><span class="mf">0.5</span><span class="o">*</span><span class="n">boxsize</span><span class="p">),</span>
                    <span class="n">boxsize</span><span class="p">,</span> <span class="n">boxsize</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="n">cmap</span><span class="p">(</span><span class="n">ut</span><span class="o">.</span><span class="n">x2clog</span><span class="p">(</span><span class="n">xi</span><span class="p">)),</span>
                    <span class="n">edgecolor</span><span class="o">=</span><span class="n">clr</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">square</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">Rectangle</span><span class="p">((</span><span class="n">n</span><span class="o">-</span><span class="mf">0.5</span><span class="o">*</span><span class="n">boxsize</span><span class="p">,</span> <span class="n">z</span><span class="o">-</span><span class="mf">0.5</span><span class="o">*</span><span class="n">boxsize</span><span class="p">),</span>
                    <span class="n">boxsize</span><span class="p">,</span> <span class="n">boxsize</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="n">cmap</span><span class="p">(</span><span class="n">xi</span><span class="p">),</span>
                    <span class="n">edgecolor</span><span class="o">=</span><span class="n">clr</span><span class="p">)</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">add_patch</span><span class="p">(</span><span class="n">square</span><span class="p">)</span>
        <span class="n">mainsquare</span> <span class="o">=</span> <span class="n">square</span>
    <span class="k">if</span> <span class="n">addtags</span><span class="p">:</span>
        <span class="n">tags</span><span class="p">,</span> <span class="n">xs</span><span class="p">,</span> <span class="n">ys</span> <span class="o">=</span> <span class="n">getNuclideGridNames</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">nam</span><span class="p">),</span> <span class="n">zs</span><span class="p">,</span> <span class="n">ns</span><span class="p">)</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">tags</span><span class="p">,</span> <span class="n">xs</span><span class="p">,</span> <span class="n">ys</span><span class="p">):</span>
            <span class="n">ax</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">verticalalignment</span><span class="o">=</span><span class="s1">&#39;center&#39;</span><span class="p">,</span> 
                    <span class="n">horizontalalignment</span><span class="o">=</span><span class="s1">&#39;right&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">clr</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;Z ($p^+$)&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">clr</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;N ($n^0$)&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">clr</span><span class="p">)</span>
<span class="c1">#     ax.set_ylabel(&#39;Proton Number&#39;, color=clr)</span>
<span class="c1">#     ax.set_xlabel(&#39;Neutron Number&#39;, color=clr)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="n">z_range</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="n">n_range</span><span class="p">)</span>
    <span class="c1"># numbered axes</span>
<span class="c1">#     ax.xaxis.tick_top()</span>
<span class="c1">#     ax.xaxis.set_label_position(&#39;top&#39;)</span>
    
    <span class="c1"># remove spines/ticks (arrow and named axes)</span>
<span class="c1">#     for side in [&#39;bottom&#39;,&#39;right&#39;,&#39;top&#39;,&#39;left&#39;]:</span>
<span class="c1">#         ax.spines[side].set_visible(False)</span>
<span class="c1">#     ax.set_xticks([]) # labels </span>
<span class="c1">#     ax.set_yticks([])</span>
<span class="c1">#     ax.arrow(0, 12, 0, 10, head_width=0.5, head_length=1, fc=clr, ec=clr)</span>
<span class="c1">#     ax.arrow(13, 0, 10, 0, head_width=0.5, head_length=1, fc=clr, ec=clr)</span>
    
    <span class="c1"># numbered axes</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">mainsquare</span></div>


<div class="viewcode-block" id="plotReacNet"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.plotReacNet">[docs]</a><span class="k">def</span> <span class="nf">plotReacNet</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">sunet</span><span class="p">,</span> <span class="n">matr_shape</span><span class="p">,</span> <span class="n">forcedZ</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">step</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">xoffset</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s1">&#39;Blues&#39;</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;plots a reaction network based on default files at cdx/Network/netname&quot;&quot;&quot;</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">matr_shape</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">line</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">f</span><span class="p">):</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">line</span><span class="p">)</span><span class="o">!=</span><span class="mi">22</span><span class="p">:</span>
                <span class="k">continue</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="k">break</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">genfromtxt</span><span class="p">(</span><span class="n">matr_shape</span><span class="p">,</span> <span class="n">skip_header</span><span class="o">=</span><span class="n">i</span><span class="p">)</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">hsplit</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">sunet</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">species</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span>
    <span class="n">species</span> <span class="o">=</span> <span class="p">[</span><span class="n">s</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">species</span><span class="p">]</span>
    <span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="n">elemSplit</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">invert</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">species</span><span class="p">]</span>
    <span class="n">nsp</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
    <span class="n">rates</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">mat</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">nsp</span><span class="p">,</span> <span class="n">nsp</span><span class="p">))</span>
    <span class="n">mat</span><span class="p">[</span><span class="n">x</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">z</span><span class="o">+</span><span class="n">forcedZ</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">cmap</span><span class="p">)</span>
    <span class="c1"># set labels</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_yticks</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">nsp</span><span class="p">,</span> <span class="n">step</span><span class="p">))</span>
    <span class="n">labels</span> <span class="o">=</span> <span class="n">names</span><span class="p">[::</span><span class="n">step</span><span class="p">]</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_yticklabels</span><span class="p">([</span><span class="s1">&#39;$^{{</span><span class="si">{}</span><span class="s1">}}{{</span><span class="si">{}</span><span class="s1">}}$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="o">*</span><span class="n">t</span><span class="p">)</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">labels</span><span class="p">],</span> 
                       <span class="n">fontsize</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;right&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">xoffset</span><span class="p">,</span> <span class="n">nsp</span><span class="p">,</span> <span class="n">step</span><span class="p">))</span>
    <span class="n">labels</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="n">xoffset</span><span class="p">::</span><span class="n">step</span><span class="p">]</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xticklabels</span><span class="p">([</span><span class="s1">&#39;$^{{</span><span class="si">{}</span><span class="s1">}}{{</span><span class="si">{}</span><span class="s1">}}$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="o">*</span><span class="n">t</span><span class="p">)</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">labels</span><span class="p">],</span> 
                       <span class="n">fontsize</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s1">&#39;baseline&#39;</span><span class="p">)</span>

    <span class="n">t</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{}</span><span class="s1"> Isotopes</span><span class="se">\n</span><span class="si">{}</span><span class="s1"> Rates&#39;</span>
    <span class="n">note</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">nsp</span><span class="p">,</span> <span class="n">rates</span><span class="p">),</span> <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span><span class="mi">30</span><span class="p">),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">nsp</span><span class="p">,</span> <span class="n">rates</span></div>


<div class="viewcode-block" id="doYouBelieveInMagic"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.doYouBelieveInMagic">[docs]</a><span class="k">def</span> <span class="nf">doYouBelieveInMagic</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;brown&#39;</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Draws a magical grid of stability (?)&quot;&quot;&quot;</span>
    <span class="n">cadabra</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">82</span><span class="p">,</span> <span class="mi">126</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">abra</span> <span class="ow">in</span> <span class="n">cadabra</span><span class="p">:</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">axhline</span><span class="p">(</span><span class="n">abra</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;:&#39;</span><span class="p">)</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">axvline</span><span class="p">(</span><span class="n">abra</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;:&#39;</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">p</span></div>


<div class="viewcode-block" id="plotPfac"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.plotPfac">[docs]</a><span class="k">def</span> <span class="nf">plotPfac</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">querym</span><span class="p">,</span> <span class="n">refname</span><span class="o">=</span><span class="n">AGSS09</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">&#39;Sun vs Ref&#39;</span><span class="p">,</span><span class="c1">#  ylims=[1e-9, 1],</span>
             <span class="n">norm</span><span class="o">=</span><span class="s1">&#39;Si&#39;</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">reftype</span><span class="o">=</span><span class="s1">&#39;solar&#39;</span><span class="p">,</span> <span class="n">tagspecies</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;draws abundquery/abundref from a massdict and a filename,</span>
<span class="sd">    types of reference are &#39;solar&#39;(for solar composition) and &#39;yield&#39; (for other sims)</span>
<span class="sd">    returns label and line element for legend&quot;&quot;&quot;</span>
    <span class="n">zs</span><span class="p">,</span> <span class="n">ns</span><span class="p">,</span> <span class="n">ab</span> <span class="o">=</span> <span class="n">convertYield2Abundance</span><span class="p">(</span><span class="n">querym</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">reftype</span><span class="o">==</span><span class="s1">&#39;solar&#39;</span><span class="p">:</span>
        <span class="n">zss</span><span class="p">,</span> <span class="n">nss</span><span class="p">,</span> <span class="n">solab</span> <span class="o">=</span> <span class="n">readSunComp</span><span class="p">(</span><span class="n">refname</span><span class="p">)</span>
        <span class="n">massF</span> <span class="o">=</span> <span class="n">getMassFractions</span><span class="p">(</span><span class="n">nss</span><span class="p">,</span> <span class="n">solab</span><span class="p">)</span>
        <span class="n">rescaledsolab</span> <span class="o">=</span> <span class="n">getAbundances</span><span class="p">(</span><span class="n">nss</span><span class="p">,</span> <span class="n">massF</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">)</span>
        <span class="n">soldict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">nss</span><span class="p">,</span> <span class="n">rescaledsolab</span><span class="p">))</span>
    <span class="k">elif</span> <span class="n">reftype</span><span class="o">==</span><span class="s1">&#39;yield&#39;</span><span class="p">:</span>
        <span class="n">massdict</span> <span class="o">=</span> <span class="n">readYield</span><span class="p">(</span><span class="n">refname</span><span class="p">)</span>
        <span class="n">zss</span><span class="p">,</span> <span class="n">nss</span><span class="p">,</span> <span class="n">solab</span> <span class="o">=</span> <span class="n">convertYield2Abundance</span><span class="p">(</span><span class="n">massdict</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">)</span>
        <span class="n">soldict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">nss</span><span class="p">,</span> <span class="n">solab</span><span class="p">))</span>
    <span class="n">pfacs</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">ns</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">soldict</span><span class="p">:</span>
            <span class="n">pfacs</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">zs</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">n</span><span class="p">,</span> <span class="n">ab</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="n">soldict</span><span class="p">[</span><span class="n">n</span><span class="p">]))</span>
            <span class="c1">#pfacs.append((zs[i], n, ab[i]/soldict[n]))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1"> not found in ref.&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">ns</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="nb">sorted</span><span class="p">(</span><span class="n">pfacs</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">axhline</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;green&#39;</span><span class="p">)</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">label</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;--&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="s1">&#39;.&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
    <span class="c1"># Prettify</span>
    <span class="k">if</span> <span class="n">tagspecies</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">pfacs</span><span class="p">):</span>
            <span class="n">ax</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s1">&#39;$</span><span class="si">{}</span><span class="s1">$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">n</span><span class="p">),</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span>
                    <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">horizontalalignment</span><span class="o">=</span><span class="s1">&#39;right&#39;</span><span class="p">,</span> <span class="n">verticalalignment</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;Atomic Number (Z)&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;$[X/</span><span class="si">{}</span><span class="s1">]- [X/</span><span class="si">{}</span><span class="s1">]_{{ref}}$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">norm</span><span class="p">,</span> <span class="n">norm</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">autoscale</span><span class="p">()</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:2.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:2.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">label</span></div>


<div class="viewcode-block" id="plotIsoMasses"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.plotIsoMasses">[docs]</a><span class="k">def</span> <span class="nf">plotIsoMasses</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">mdict</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">&#39;W7&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="n">ylims</span><span class="o">=</span><span class="p">[</span><span class="mf">1e-18</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">],</span> <span class="n">notag</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;draws isotopic masses vs atomic mass, returns label and line element for legend&quot;&quot;&quot;</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">mdict</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
        <span class="n">zz</span> <span class="o">=</span> <span class="n">mdict</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="s1">&#39;z&#39;</span><span class="p">]</span>
        <span class="n">vals</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">mdict</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="s1">&#39;n&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
            <span class="n">vals</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">n</span><span class="o">+</span><span class="n">zz</span><span class="p">,</span> <span class="n">mdict</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="s1">&#39;n&#39;</span><span class="p">][</span><span class="n">n</span><span class="p">]))</span>
        <span class="n">purgevals</span> <span class="o">=</span> <span class="p">[</span><span class="n">v</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">vals</span> <span class="k">if</span> <span class="n">ylims</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;=</span> <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;=</span><span class="n">ylims</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">purgevals</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">:</span>
            <span class="k">continue</span>
        <span class="n">xs</span><span class="p">,</span> <span class="n">ys</span> <span class="o">=</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="nb">sorted</span><span class="p">(</span><span class="n">purgevals</span><span class="p">))</span>
        <span class="n">line</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">semilogy</span><span class="p">(</span><span class="n">xs</span><span class="p">,</span> <span class="n">ys</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;--&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="s1">&#39;.&#39;</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">label</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">notag</span><span class="p">:</span>
            <span class="k">continue</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="n">xs</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">ys</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s1">&#39;$</span><span class="si">{}</span><span class="s1">$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">k</span><span class="p">),</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span>
                <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">horizontalalignment</span><span class="o">=</span><span class="s1">&#39;right&#39;</span><span class="p">,</span> <span class="n">verticalalignment</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">)</span>
    <span class="c1"># Prettify</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;Atomic Mass (A)&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;Mass ($M_{\odot}$)&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">([</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">78</span><span class="p">])</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="n">ylims</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:0.0e}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:2.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">label</span></div>


<div class="viewcode-block" id="plotAbun"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.plotAbun">[docs]</a><span class="k">def</span> <span class="nf">plotAbun</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">mdict</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="s1">&#39;H&#39;</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="mf">12.0</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s1">&#39;W7&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="n">tagspecies</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;draws abundances vs atomic number, returns label and line element for legend&quot;&quot;&quot;</span>
    <span class="n">zs</span><span class="p">,</span> <span class="n">names</span><span class="p">,</span> <span class="n">mix</span> <span class="o">=</span> <span class="n">convertYield2Abundance</span><span class="p">(</span><span class="n">mdict</span><span class="p">,</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">)</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">zs</span><span class="p">,</span> <span class="n">mix</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">label</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="s1">&#39;.&#39;</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="c1"># Prettify</span>
    <span class="k">if</span> <span class="n">tagspecies</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">zs</span><span class="p">,</span> <span class="n">names</span><span class="p">,</span> <span class="n">mix</span><span class="p">):</span>
            <span class="n">ax</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s1">&#39;$</span><span class="si">{}</span><span class="s1">$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">n</span><span class="p">),</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span>
                    <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">horizontalalignment</span><span class="o">=</span><span class="s1">&#39;right&#39;</span><span class="p">,</span> <span class="n">verticalalignment</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;Atomic Number (Z)&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;[X/</span><span class="si">{}</span><span class="s1">] + </span><span class="si">{:2.1f}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">norm</span><span class="p">,</span> <span class="n">offset</span><span class="p">))</span>
    <span class="c1">#ax.set_xlim([-2, 78])</span>
    <span class="c1">#ax.set_ylim(ylims)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:2.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:2.0f}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">label</span></div>


<div class="viewcode-block" id="speciesGrid"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.speciesGrid">[docs]</a><span class="k">def</span> <span class="nf">speciesGrid</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">spcodes</span><span class="p">,</span> <span class="n">yoffset</span><span class="o">=</span><span class="mf">5.0</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;draws a grid of the specified species on target ax.&quot;&quot;&quot;</span>
    <span class="n">Sp</span><span class="p">,</span> <span class="n">Zs</span><span class="p">,</span> <span class="n">Ns</span><span class="p">,</span> <span class="n">As</span> <span class="o">=</span> <span class="n">splitSpecies</span><span class="p">(</span><span class="n">spcodes</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">sp</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">Sp</span><span class="p">):</span>
        <span class="n">props</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">ax</span><span class="o">.</span><span class="n">_get_lines</span><span class="o">.</span><span class="n">prop_cycler</span><span class="p">)</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">axvline</span><span class="p">(</span><span class="n">Zs</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s1">&#39;--&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">props</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">])</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="n">Zs</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">ax</span><span class="o">.</span><span class="n">get_ylim</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">yoffset</span><span class="p">,</span> <span class="s1">&#39;$</span><span class="si">{}</span><span class="s1">$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">sp</span><span class="p">),</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
                <span class="n">horizontalalignment</span><span class="o">=</span><span class="s1">&#39;left&#39;</span><span class="p">,</span> <span class="n">verticalalignment</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">props</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">])</span>
    <span class="k">return</span> <span class="mi">0</span></div>


<div class="viewcode-block" id="getNuclideGridNames"><a class="viewcode-back" href="../../../flashy.plot.xhtml#flashy.plot.nucplot.getNuclideGridNames">[docs]</a><span class="k">def</span> <span class="nf">getNuclideGridNames</span><span class="p">(</span><span class="n">names</span><span class="p">,</span> <span class="n">zs</span><span class="p">,</span> <span class="n">ns</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Retuns tags and positions for a nuclide grid.&quot;&quot;&quot;</span>
    <span class="k">if</span> <span class="s1">&#39;p&#39;</span> <span class="ow">in</span> <span class="n">names</span> <span class="ow">and</span> <span class="s1">&#39;H&#39;</span> <span class="ow">in</span> <span class="n">names</span><span class="p">:</span>
        <span class="n">names</span><span class="p">[</span><span class="n">names</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s1">&#39;p&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="s1">&#39;H&#39;</span>  <span class="c1"># change proton name to void H tag</span>
    <span class="n">tags</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
    <span class="n">nams</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="p">[],</span> <span class="p">[],</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">names</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">n</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
            <span class="n">tags</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
            <span class="n">nams</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
            <span class="n">x</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ns</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="mf">0.7</span><span class="p">)</span>
            <span class="n">y</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">zs</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">nams</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>