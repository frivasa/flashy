<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>flashy.wdprofiles.coldFermi</title>
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for flashy.wdprofiles.coldFermi</h1><div class="highlight"><pre>
<span></span><span class="sd">&quot;&quot;&quot;Fermi eos wd profiles, adapted from Timmes public cowd code.</span>
<span class="sd">20180430: Helmholtz Eos added for temperature. Composition can also change</span>

<span class="sd">TDL: apply min dens criteria.</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">from</span> <span class="nn">..utils</span> <span class="k">import</span> <span class="n">msol</span><span class="p">,</span> <span class="n">rsol</span><span class="p">,</span> <span class="n">G</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">m_e</span><span class="p">,</span> <span class="n">Avogadro</span><span class="p">,</span> <span class="n">np</span><span class="p">,</span> <span class="n">kb</span>
<span class="kn">from</span> <span class="nn">..nuclear</span> <span class="k">import</span> <span class="n">convXmass2Abun</span>
<span class="kn">from</span> <span class="nn">..datahaul.plainText</span> <span class="k">import</span> <span class="n">dataMatrix</span>
<span class="kn">from</span> <span class="nn">..datahaul.helmholtz</span> <span class="k">import</span> <span class="n">getTemps</span>
<span class="kn">from</span> <span class="nn">..post</span> <span class="k">import</span> <span class="n">nonRelFermi</span>
<span class="c1"># Giant Hammer</span>
<span class="kn">from</span> <span class="nn">scipy.integrate</span> <span class="k">import</span> <span class="n">solve_ivp</span>
<span class="c1"># Tools for micromanagement</span>
<span class="c1"># from scipy.integrate import RK45</span>
<span class="c1"># mercury = RK45(derv, rads[0], [ms[0], ps[0]], rads[2], max_step=100)</span>


<div class="viewcode-block" id="buildFermiHelmhotz"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.buildFermiHelmhotz">[docs]</a><span class="k">def</span> <span class="nf">buildFermiHelmhotz</span><span class="p">(</span><span class="n">denc</span><span class="p">,</span> <span class="n">xmass</span><span class="p">,</span> <span class="n">species</span><span class="p">,</span> <span class="n">pdens</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">hack</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Solves an IVP for a completely degenerate Fermi gas under hydrostatic equilibrium,</span>
<span class="sd">    then uses a Helmholtz EoS to assign a temperature value to the profile (this is somewhat</span>
<span class="sd">    wrong but better than guessing or putting an average).</span>
<span class="sd">    WARN: for high densities (over 1e8), helmholtz temp breaks </span>
<span class="sd">    (reaches minimum 1e4 K and &#39;bounces&#39;).</span>
<span class="sd">    WARN: pdens maxes around 600 points, beyond that the helmholtz package breaks.</span>

<span class="sd">    Args:</span>
<span class="sd">        denc(float): initial central density.</span>
<span class="sd">        xmass(float list): mass fractions for the used species.</span>
<span class="sd">        species(str list): nuclide code for each species.</span>
<span class="sd">        pdens(int): force a set number of points in the output (WARNING: runs ivp twice).</span>
<span class="sd">        hack(bool): avoid helmholtz temperature and return a &#39;weighted&#39; fermi temperature.</span>

<span class="sd">    Returns:</span>
<span class="sd">        (dataMatrix): tabbable profile object.</span>

<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">ymass</span><span class="p">,</span> <span class="n">abar</span><span class="p">,</span> <span class="n">zbar</span> <span class="o">=</span> <span class="n">convXmass2Abun</span><span class="p">(</span><span class="n">species</span><span class="p">,</span> <span class="n">xmass</span><span class="p">)</span>
    <span class="n">ye</span> <span class="o">=</span> <span class="n">zbar</span><span class="o">/</span><span class="n">abar</span>
    <span class="n">r</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">p</span> <span class="o">=</span> <span class="n">buildFermiProfile</span><span class="p">(</span><span class="n">denc</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="n">ye</span><span class="p">,</span> <span class="n">pdens</span><span class="o">=</span><span class="n">pdens</span><span class="p">)</span>
    <span class="n">tH</span> <span class="o">=</span> <span class="n">getTemps</span><span class="p">([</span><span class="n">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span> <span class="p">[</span><span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span> <span class="p">[</span><span class="n">xmass</span><span class="p">],</span> <span class="n">species</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">hack</span><span class="p">:</span> 
        <span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="n">nonRelFermi</span><span class="p">(</span><span class="n">de</span><span class="p">)</span><span class="o">/</span><span class="n">kb</span><span class="o">/</span><span class="n">tH</span> <span class="k">for</span> <span class="n">de</span> <span class="ow">in</span> <span class="n">d</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">getTemps</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="o">*</span><span class="p">[</span><span class="n">xmass</span><span class="p">],</span> <span class="n">species</span><span class="p">)</span>
    <span class="n">keys</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">,</span> <span class="s1">&#39;dens&#39;</span><span class="p">,</span> <span class="s1">&#39;pres&#39;</span><span class="p">,</span> <span class="s1">&#39;temp&#39;</span><span class="p">]</span>
    <span class="n">datablock</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">column_stack</span><span class="p">([</span><span class="n">r</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">t</span><span class="p">])</span>
    <span class="n">mult</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">xmass</span><span class="p">):</span>
        <span class="n">keys</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">species</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
        <span class="n">datablock</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">column_stack</span><span class="p">((</span><span class="n">datablock</span><span class="p">,</span> <span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">*</span><span class="n">mult</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">dataMatrix</span><span class="p">([</span><span class="n">keys</span><span class="p">,</span> <span class="n">datablock</span><span class="p">])</span></div>


<div class="viewcode-block" id="buildFermiProfile"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.buildFermiProfile">[docs]</a><span class="k">def</span> <span class="nf">buildFermiProfile</span><span class="p">(</span><span class="n">denc</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="mf">1e4</span><span class="p">,</span> <span class="n">stop</span><span class="o">=</span><span class="mf">1e10</span><span class="p">,</span> <span class="n">pdens</span><span class="o">=</span><span class="mi">400</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Solves an IVP for a completely degenerate Fermi gas under hydrostatic equilibrium.</span>

<span class="sd">    Args:</span>
<span class="sd">        denc(float): initial central density.</span>
<span class="sd">        ye(float): electron fraction.</span>
<span class="sd">        start(float): initial radius (minimum radius).</span>
<span class="sd">        stop(float): ivp solver stopping radius.</span>
<span class="sd">        pdens(int): points/2 to evaulate. (uses other half for edge)</span>

<span class="sd">    Returns:</span>
<span class="sd">        (float list): radii</span>
<span class="sd">        (float list): masses</span>
<span class="sd">        (float list): densities</span>
<span class="sd">        (float list): pressures</span>

<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">y0</span> <span class="o">=</span> <span class="n">setBC</span><span class="p">(</span><span class="n">denc</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="n">ye</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="n">start</span><span class="p">)</span>
    <span class="c1"># run to find the edge</span>
    <span class="n">pheidippides</span> <span class="o">=</span> <span class="n">solve_ivp</span><span class="p">(</span><span class="n">fun</span><span class="o">=</span><span class="k">lambda</span> <span class="n">t</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">derv</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="n">ye</span><span class="p">),</span> <span class="n">method</span><span class="o">=</span><span class="s1">&#39;BDF&#39;</span><span class="p">,</span> <span class="n">jac</span><span class="o">=</span><span class="n">jac</span><span class="p">,</span>
                             <span class="n">t_span</span><span class="o">=</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">stop</span><span class="p">),</span> <span class="n">y0</span><span class="o">=</span><span class="n">y0</span><span class="p">)</span><span class="c1"># events=athens)</span>
    <span class="c1"># run again to get the desired number of points and focus on the edge</span>
    <span class="n">core</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">logspace</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">start</span><span class="p">),</span> <span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="mf">0.9</span><span class="o">*</span><span class="n">pheidippides</span><span class="o">.</span><span class="n">t</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span> <span class="n">pdens</span><span class="p">)</span>
    <span class="c1"># near the outermost 10%, use pdens points</span>
    <span class="n">edge</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="mf">0.91</span><span class="o">*</span><span class="n">pheidippides</span><span class="o">.</span><span class="n">t</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="mf">1.01</span><span class="o">*</span><span class="n">pheidippides</span><span class="o">.</span><span class="n">t</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="n">pdens</span><span class="p">)</span>
    <span class="n">rads</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">core</span><span class="p">,</span> <span class="n">edge</span><span class="p">)</span>
    <span class="n">pheidippides</span> <span class="o">=</span> <span class="n">solve_ivp</span><span class="p">(</span><span class="n">fun</span><span class="o">=</span><span class="k">lambda</span> <span class="n">t</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">derv</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="n">ye</span><span class="p">),</span> <span class="n">jac</span><span class="o">=</span><span class="n">jac</span><span class="p">,</span>
                             <span class="n">method</span><span class="o">=</span><span class="s1">&#39;BDF&#39;</span><span class="p">,</span>
                             <span class="n">t_span</span><span class="o">=</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">stop</span><span class="p">),</span> <span class="n">y0</span><span class="o">=</span><span class="n">y0</span><span class="p">,</span>
                             <span class="n">t_eval</span><span class="o">=</span><span class="n">rads</span><span class="p">)</span>
    <span class="n">rs</span><span class="p">,</span> <span class="n">ms</span><span class="p">,</span> <span class="n">ps</span> <span class="o">=</span> <span class="n">pheidippides</span><span class="o">.</span><span class="n">t</span><span class="p">,</span> <span class="n">pheidippides</span><span class="o">.</span><span class="n">y</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">pheidippides</span><span class="o">.</span><span class="n">y</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="p">[</span><span class="n">invert_fergas</span><span class="p">(</span><span class="n">denc</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">ye</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">ps</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">rs</span><span class="p">,</span> <span class="n">ms</span><span class="p">,</span> <span class="n">ds</span><span class="p">,</span> <span class="n">ps</span></div>


<div class="viewcode-block" id="setBC"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.setBC">[docs]</a><span class="k">def</span> <span class="nf">setBC</span><span class="p">(</span><span class="n">dens</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="mf">1e4</span><span class="p">):</span>
    <span class="n">presc</span><span class="p">,</span> <span class="n">dpresdd</span><span class="p">,</span> <span class="n">ener</span><span class="p">,</span> <span class="n">denerdd</span> <span class="o">=</span> <span class="n">fergas</span><span class="p">(</span><span class="n">dens</span><span class="p">,</span> <span class="n">ye</span><span class="p">)</span>
    <span class="c1"># intial conditions: first cell&#39;s mass, and central pressure</span>
    <span class="n">con1</span>   <span class="o">=</span> <span class="mf">4.0e0</span> <span class="o">*</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span>
    <span class="n">ms0</span> <span class="o">=</span> <span class="n">con1</span> <span class="o">*</span> <span class="n">start</span><span class="o">**</span><span class="mi">3</span> <span class="o">*</span> <span class="n">dens</span>
    <span class="n">ps0</span> <span class="o">=</span> <span class="n">presc</span> <span class="o">-</span> <span class="mf">0.5e0</span> <span class="o">*</span> <span class="n">con1</span> <span class="o">*</span> <span class="n">G</span> <span class="o">*</span> <span class="n">start</span><span class="o">**</span><span class="mi">2</span> <span class="o">*</span> <span class="n">dens</span><span class="o">**</span><span class="mi">2</span>
    <span class="k">return</span> <span class="p">[</span><span class="n">ms0</span><span class="p">,</span> <span class="n">ps0</span><span class="p">]</span></div>


<span class="c1"># def athens(t, y):</span>
<span class="c1">#     athens.terminal = True</span>
<span class="c1">#     if y[1]&lt;=-1e6:</span>
<span class="c1">#         return 0.0</span>
<span class="c1">#     else:</span>
<span class="c1">#         return 1.0</span>


<div class="viewcode-block" id="jac"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.jac">[docs]</a><span class="k">def</span> <span class="nf">jac</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">denc</span><span class="o">=</span><span class="mf">1e9</span><span class="p">):</span>
    <span class="n">vol</span> <span class="o">=</span> <span class="mi">4</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">power</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">)</span><span class="o">/</span><span class="mf">3.0</span>
    <span class="n">den</span><span class="p">,</span> <span class="n">dpdd</span> <span class="o">=</span> <span class="n">invert_fergas</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="n">vol</span><span class="p">,</span> <span class="n">y</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mf">0.5</span><span class="p">)</span>
    <span class="n">mdm</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">mdp</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">pdm</span> <span class="o">=</span> <span class="o">-</span><span class="n">G</span><span class="o">*</span><span class="n">den</span><span class="o">/</span><span class="n">x</span><span class="o">/</span><span class="n">x</span>
    <span class="n">pdp</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">return</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="n">mdm</span><span class="p">,</span> <span class="n">mdp</span><span class="p">],[</span><span class="n">pdm</span><span class="p">,</span> <span class="n">pdp</span><span class="p">]])</span></div>


<div class="viewcode-block" id="derv"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.derv">[docs]</a><span class="k">def</span> <span class="nf">derv</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">denc</span><span class="o">=</span><span class="mf">1e9</span><span class="p">,</span> <span class="n">ye</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">genrel</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
    <span class="c1"># this routine sets up the continuity and hydrostatic equilibrium ode&#39;s.</span>
    <span class="c1"># x is the radial coordinate, y(1) is the gravitational mass,</span>
    <span class="c1"># y(2) is the pressure</span>
    <span class="n">con1</span>   <span class="o">=</span> <span class="mf">4.0e0</span> <span class="o">*</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span>
    <span class="n">c2</span>     <span class="o">=</span> <span class="n">c</span><span class="o">*</span><span class="n">c</span>
    <span class="c1"># map the input vector</span>
    <span class="n">massg</span> <span class="o">=</span> <span class="n">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">pres</span>  <span class="o">=</span> <span class="n">y</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>

    <span class="c1"># cold ideal fermi gas</span>
    <span class="c1"># guess through mean density</span>
    <span class="n">vol</span> <span class="o">=</span> <span class="mi">4</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">power</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">)</span><span class="o">/</span><span class="mf">3.0</span>
    <span class="n">den</span><span class="p">,</span> <span class="n">dpdd</span> <span class="o">=</span> <span class="n">invert_fergas</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="n">vol</span><span class="p">,</span> <span class="n">pres</span><span class="p">,</span> <span class="n">ye</span><span class="p">)</span>
    <span class="c1"># here is d(massg)/dr</span>
    <span class="n">dydx</span> <span class="o">=</span> <span class="p">[</span><span class="n">con1</span> <span class="o">*</span> <span class="n">x</span><span class="o">*</span><span class="n">x</span> <span class="o">*</span> <span class="n">den</span><span class="p">]</span>
    <span class="c1"># here is d(press)/dr</span>
    <span class="k">if</span> <span class="n">genrel</span><span class="p">:</span>
        <span class="n">cor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">+</span> <span class="n">pres</span><span class="o">/</span><span class="p">(</span><span class="n">den</span><span class="o">*</span><span class="n">c2</span><span class="p">))</span> <span class="o">*</span>\
              <span class="p">(</span><span class="mf">1.0</span> <span class="o">+</span> <span class="p">(</span><span class="n">con1</span><span class="o">*</span><span class="n">pres</span><span class="o">*</span><span class="n">x</span><span class="o">**</span><span class="mi">3</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">massg</span><span class="o">*</span><span class="n">c2</span><span class="p">))</span> <span class="o">/</span>\
              <span class="p">(</span><span class="mf">1.0</span> <span class="o">-</span> <span class="p">(</span><span class="mf">2.0</span><span class="o">*</span><span class="n">G</span><span class="o">*</span><span class="n">massg</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">c2</span><span class="p">))</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">cor</span> <span class="o">=</span> <span class="mf">1.0</span>
    <span class="n">dydx</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="o">-</span><span class="n">G</span> <span class="o">*</span> <span class="n">massg</span><span class="o">/</span><span class="n">x</span><span class="o">/</span><span class="n">x</span><span class="o">*</span> <span class="n">den</span> <span class="o">*</span> <span class="n">cor</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">dydx</span></div>


<div class="viewcode-block" id="fergas"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.fergas">[docs]</a><span class="k">def</span> <span class="nf">fergas</span><span class="p">(</span><span class="n">den</span><span class="p">,</span> <span class="n">ye</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;the eos for a cold fermi gas</span>
<span class="sd">    see, for example, cox &amp; guili equation 24.157 or chandra chapter 10, eq. 19-20</span>

<span class="sd">    input is the density den and the mean charge to mean weight ratio ye.</span>
<span class="sd">    output is the pressure (in erg/cm**3), the pressure derivative with density,</span>
<span class="sd">    the energy (in erg/g), and the energy derivative with density.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">hbar</span> <span class="o">=</span> <span class="mf">0.5</span><span class="o">*</span> <span class="n">h</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span>
    <span class="n">lamb</span> <span class="o">=</span> <span class="n">hbar</span><span class="o">/</span><span class="p">(</span><span class="n">m_e</span><span class="o">*</span><span class="n">c</span><span class="p">)</span>
    <span class="n">lam3</span> <span class="o">=</span> <span class="n">lamb</span><span class="o">*</span><span class="n">lamb</span><span class="o">*</span><span class="n">lamb</span>
    <span class="n">xcon</span> <span class="o">=</span> <span class="mf">3.0e0</span> <span class="o">*</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span> <span class="o">*</span> <span class="n">lam3</span> <span class="o">*</span> <span class="n">Avogadro</span>
    <span class="n">pcon</span> <span class="o">=</span> <span class="n">m_e</span><span class="o">*</span><span class="n">c</span><span class="o">*</span><span class="n">c</span><span class="o">/</span><span class="p">(</span><span class="n">lam3</span><span class="o">*</span><span class="mf">8.0e0</span><span class="o">*</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="p">)</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">den</span> <span class="o">&lt;</span> <span class="mf">0.0</span><span class="p">):</span>
        <span class="c1"># print &#39;bad pass in routine fergas&#39;</span>
        <span class="k">return</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span>
    <span class="n">deni</span> <span class="o">=</span> <span class="mf">1.0e0</span><span class="o">/</span><span class="n">den</span>
    <span class="n">x</span>    <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">power</span><span class="p">(</span><span class="n">xcon</span><span class="o">*</span><span class="n">den</span><span class="o">*</span><span class="n">ye</span><span class="p">,</span> <span class="mi">1</span><span class="o">/</span><span class="mf">3.0</span><span class="p">)</span>
    <span class="n">dxdd</span> <span class="o">=</span>  <span class="n">x</span> <span class="o">*</span> <span class="n">deni</span> <span class="o">/</span> <span class="mf">3.0</span>
    <span class="n">x2</span>   <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">x</span>
    <span class="n">x3</span>   <span class="o">=</span> <span class="n">x2</span> <span class="o">*</span> <span class="n">x</span>
    <span class="c1"># the pressure in erg/cm**3</span>
    <span class="c1"># note: fac3 is a way of writing arc-sinh(x)</span>
    <span class="n">fac1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mf">1.0e0</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span>
    <span class="n">fac2</span> <span class="o">=</span> <span class="mf">2.0</span> <span class="o">*</span> <span class="n">x2</span><span class="o">/</span><span class="mf">3.0</span>  <span class="o">-</span> <span class="mf">1.0</span>
    <span class="n">fac3</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">fac1</span><span class="p">)</span>
    <span class="n">pres</span> <span class="o">=</span> <span class="n">pcon</span> <span class="o">*</span> <span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">fac1</span><span class="o">*</span><span class="n">fac2</span> <span class="o">+</span> <span class="n">fac3</span><span class="p">)</span>
    <span class="c1"># pressure derivative with density</span>
    <span class="n">dfac1</span> <span class="o">=</span> <span class="n">x</span><span class="o">/</span><span class="n">fac1</span>
    <span class="n">dfac2</span> <span class="o">=</span> <span class="mf">4.0</span><span class="o">*</span><span class="n">x</span><span class="o">/</span><span class="mf">3.0</span>
    <span class="n">dfac3</span> <span class="o">=</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">+</span> <span class="n">dfac1</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">fac1</span><span class="p">)</span>
    <span class="n">dpdx</span>  <span class="o">=</span> <span class="n">pcon</span> <span class="o">*</span> <span class="p">(</span><span class="n">fac1</span><span class="o">*</span><span class="n">fac2</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="n">dfac1</span><span class="o">*</span><span class="n">fac2</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="n">fac1</span><span class="o">*</span><span class="n">dfac2</span> <span class="o">+</span> <span class="n">dfac3</span><span class="p">)</span>
    <span class="n">dpdd</span>  <span class="o">=</span> <span class="n">dpdx</span> <span class="o">*</span> <span class="n">dxdd</span>
    <span class="c1"># the internal energy in erg/cm**3</span>
    <span class="n">gac1</span>  <span class="o">=</span> <span class="mf">8.0</span> <span class="o">*</span> <span class="n">x3</span><span class="o">/</span><span class="mf">3.0</span>
    <span class="n">gac2</span>  <span class="o">=</span> <span class="n">fac1</span> <span class="o">-</span> <span class="mf">1.0</span>
    <span class="n">ener</span>  <span class="o">=</span> <span class="n">pcon</span><span class="o">*</span><span class="n">gac1</span><span class="o">*</span><span class="n">gac2</span> <span class="o">-</span> <span class="n">pres</span>
    <span class="c1"># energy derivative with density</span>
    <span class="n">dgac1</span> <span class="o">=</span> <span class="mf">8.0</span> <span class="o">*</span> <span class="n">x2</span>
    <span class="n">dgac2</span> <span class="o">=</span> <span class="n">dfac1</span>
    <span class="n">dedx</span>  <span class="o">=</span> <span class="n">pcon</span><span class="o">*</span><span class="p">(</span><span class="n">dgac1</span><span class="o">*</span><span class="n">gac2</span> <span class="o">+</span> <span class="n">gac1</span><span class="o">*</span><span class="n">dgac2</span><span class="p">)</span> <span class="o">-</span> <span class="n">dpdx</span>
    <span class="n">dedd</span>  <span class="o">=</span> <span class="n">dedx</span> <span class="o">*</span> <span class="n">dxdd</span>
    <span class="c1"># convert the energies into erg/g</span>
    <span class="n">ener</span> <span class="o">=</span> <span class="n">ener</span> <span class="o">*</span> <span class="n">deni</span>
    <span class="n">dedd</span> <span class="o">=</span> <span class="p">(</span><span class="n">dedd</span> <span class="o">-</span> <span class="n">ener</span><span class="p">)</span> <span class="o">*</span> <span class="n">deni</span>
    <span class="k">return</span> <span class="n">pres</span><span class="p">,</span> <span class="n">dpdd</span><span class="p">,</span> <span class="n">ener</span><span class="p">,</span> <span class="n">dedd</span></div>


<div class="viewcode-block" id="invert_fergas"><a class="viewcode-back" href="../../../flashy.wdprofiles.xhtml#flashy.wdprofiles.coldFermi.invert_fergas">[docs]</a><span class="k">def</span> <span class="nf">invert_fergas</span><span class="p">(</span><span class="n">den</span><span class="p">,</span> <span class="n">pres</span><span class="p">,</span> <span class="n">ye</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    given the pressure, ye, and a guess for the density,</span>
<span class="sd">    find the density and dpdd</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="c1"># local variables</span>
    <span class="n">eostol</span> <span class="o">=</span> <span class="mf">1.0e-6</span>
    <span class="n">fpmin</span>  <span class="o">=</span> <span class="mf">1.0e-14</span>
    <span class="c1"># save the initial guess</span>
    <span class="n">denold</span> <span class="o">=</span> <span class="n">den</span>
    <span class="c1"># newton loop</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">):</span>
        <span class="n">pres1</span><span class="p">,</span> <span class="n">dpdd</span><span class="p">,</span> <span class="n">ener</span><span class="p">,</span> <span class="n">dedd</span> <span class="o">=</span> <span class="n">fergas</span><span class="p">(</span><span class="n">den</span><span class="p">,</span><span class="n">ye</span><span class="p">)</span>
        <span class="n">f</span>  <span class="o">=</span> <span class="n">pres1</span><span class="o">/</span><span class="n">pres</span> <span class="o">-</span> <span class="mf">1.0</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">dpdd</span><span class="o">/</span><span class="n">pres</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">df</span> <span class="o">==</span> <span class="mf">0.0</span><span class="p">):</span>
            <span class="k">return</span> <span class="n">denold</span><span class="p">,</span> <span class="mf">0.0</span>
        <span class="n">ratio</span>  <span class="o">=</span> <span class="n">f</span><span class="o">/</span><span class="n">df</span>
        <span class="n">dennew</span> <span class="o">=</span> <span class="n">den</span> <span class="o">-</span> <span class="n">ratio</span>
        <span class="n">z</span>      <span class="o">=</span> <span class="nb">abs</span><span class="p">((</span><span class="n">dennew</span> <span class="o">-</span> <span class="n">den</span><span class="p">)</span><span class="o">/</span><span class="n">den</span><span class="p">)</span>
        <span class="n">den</span>    <span class="o">=</span> <span class="n">dennew</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">z</span> <span class="o">&lt;</span> <span class="n">eostol</span> <span class="ow">or</span> <span class="nb">abs</span><span class="p">(</span><span class="n">ratio</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">fpmin</span><span class="p">):</span>
            <span class="k">break</span>
    <span class="c1"># call it one more time with the converged value of the density</span>
    <span class="n">pres1</span><span class="p">,</span> <span class="n">dpdd</span><span class="p">,</span> <span class="n">ener</span><span class="p">,</span> <span class="n">dedd</span> <span class="o">=</span> <span class="n">fergas</span><span class="p">(</span><span class="n">den</span><span class="p">,</span><span class="n">ye</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">den</span><span class="p">,</span> <span class="n">dpdd</span></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>