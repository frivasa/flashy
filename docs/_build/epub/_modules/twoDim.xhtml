<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>twoDim</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for twoDim</h1><div class="highlight"><pre>
<span></span><span class="kn">from</span> <span class="nn">_globals</span> <span class="k">import</span> <span class="o">*</span>

<span class="c1"># custom fields</span>
<span class="k">def</span> <span class="nf">_speed</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
    <span class="n">vx</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;flash&#39;</span><span class="p">,</span> <span class="s1">&#39;velx&#39;</span><span class="p">]</span>
    <span class="n">vy</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;flash&#39;</span><span class="p">,</span> <span class="s1">&#39;vely&#39;</span><span class="p">]</span>
    <span class="n">spd</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">vx</span><span class="o">*</span><span class="n">vx</span> <span class="o">+</span> <span class="n">vy</span><span class="o">*</span><span class="n">vy</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">spd</span>
<span class="c1">#yt.add_field((&quot;flash&quot;,&quot;speed&quot;), function=_speed, units=&quot;cm/s&quot;, take_log=False)</span>

<span class="c1"># yt plotting functions</span>
<div class="viewcode-block" id="planeSlice"><a class="viewcode-back" href="../index.xhtml#twoDim.planeSlice">[docs]</a><span class="k">def</span> <span class="nf">planeSlice</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="n">field</span><span class="p">,</span> <span class="n">lims</span><span class="p">,</span> <span class="n">zcut</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span> <span class="n">linear</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="n">plR</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Makes a slice at zcut&quot;&quot;&quot;</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span>
    <span class="n">p</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">SlicePlot</span><span class="p">(</span><span class="n">ds</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">,</span> <span class="n">field</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">zcut</span><span class="p">])</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_width</span><span class="p">((</span><span class="n">width</span><span class="p">,</span> <span class="n">width</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_cmap</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="s1">&#39;custom&#39;</span><span class="p">)</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_axes_unit</span><span class="p">(</span><span class="s1">&#39;cm&#39;</span><span class="p">)</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
    <span class="n">grid</span> <span class="o">=</span> <span class="n">AxesGrid</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="mi">111</span><span class="p">,</span> <span class="n">nrows_ncols</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
                    <span class="n">axes_pad</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">,</span> <span class="n">label_mode</span> <span class="o">=</span> <span class="s2">&quot;L&quot;</span><span class="p">,</span>
                    <span class="n">share_all</span> <span class="o">=</span> <span class="kc">False</span><span class="p">,</span> <span class="n">cbar_location</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span>
                    <span class="n">cbar_mode</span><span class="o">=</span><span class="s2">&quot;each&quot;</span><span class="p">,</span> <span class="n">cbar_size</span><span class="o">=</span><span class="s2">&quot;5%&quot;</span><span class="p">,</span> <span class="n">cbar_pad</span><span class="o">=</span><span class="s2">&quot;0%&quot;</span><span class="p">)</span>
    <span class="n">im</span><span class="p">,</span> <span class="n">cax</span> <span class="o">=</span> <span class="n">plotFRB</span><span class="p">(</span><span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">grid</span><span class="o">.</span><span class="n">cbar_axes</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> 
                      <span class="n">np</span><span class="o">.</span><span class="n">transpose</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">frb</span><span class="p">[</span><span class="n">field</span><span class="p">]),</span> 
                      <span class="n">lims</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="s1">&#39;on&#39;</span><span class="p">)</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s2">&quot;Time: </span><span class="si">{:.5f}</span><span class="s2"> s&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">current_time</span><span class="p">)),</span>
                     <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.75</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">),</span> <span class="n">textcoords</span><span class="o">=</span><span class="s1">&#39;figure fraction&#39;</span><span class="p">)</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s2">&quot;Z: </span><span class="si">{:.4e}</span><span class="s2"> cm&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">zcut</span><span class="p">),</span>
                     <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.10</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">),</span> <span class="n">textcoords</span><span class="o">=</span><span class="s1">&#39;figure fraction&#39;</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">show</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">fig</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameter_filename</span><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">:]</span>
        <span class="n">otpf</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">fullpath</span><span class="p">)</span>
        <span class="n">tag</span> <span class="o">=</span> <span class="s1">&#39;slices</span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
        <span class="n">savn</span> <span class="o">=</span> <span class="s1">&#39;slice_</span><span class="si">{:+13.0f}</span><span class="s1">.png&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">zcut</span><span class="p">)</span>
        <span class="n">savf</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">)</span>
        <span class="n">savp</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="p">,</span> <span class="n">savn</span><span class="p">)</span>
        <span class="c1"># build filetree and show or save the figure</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">savf</span><span class="p">):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">savf</span><span class="p">)</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="k">elif</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">)):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">close</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>
        <span class="nb">print</span> <span class="s2">&quot;Wrote: </span><span class="si">{}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span></div>


<div class="viewcode-block" id="bifold"><a class="viewcode-back" href="../index.xhtml#twoDim.bifold">[docs]</a><span class="k">def</span> <span class="nf">bifold</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="n">mhead</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">topfield</span><span class="o">=</span><span class="s1">&#39;density&#39;</span><span class="p">,</span> <span class="n">tlims</span><span class="o">=</span><span class="p">[</span><span class="mf">1e-1</span><span class="p">,</span> <span class="mf">4e7</span><span class="p">],</span> <span class="n">width</span><span class="o">=</span><span class="n">plR</span><span class="p">,</span>
           <span class="n">botfield</span><span class="o">=</span><span class="s1">&#39;temperature&#39;</span><span class="p">,</span> <span class="n">blims</span><span class="o">=</span><span class="p">[</span><span class="mf">3e7</span><span class="p">,</span> <span class="mf">2e9</span><span class="p">],</span> <span class="n">lintop</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>  <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
           <span class="n">linbot</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Plots 2 properties as a joined sphere.&quot;&quot;&quot;</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span>
    <span class="n">p</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">SlicePlot</span><span class="p">(</span><span class="n">ds</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">,</span> <span class="p">[</span><span class="n">topfield</span><span class="p">,</span> <span class="n">botfield</span><span class="p">])</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_width</span><span class="p">((</span><span class="n">width</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">width</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_center</span><span class="p">((</span><span class="n">width</span><span class="o">*</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_origin</span><span class="p">((</span><span class="s2">&quot;center&quot;</span><span class="p">,</span> <span class="s2">&quot;left&quot;</span><span class="p">,</span> <span class="s2">&quot;domain&quot;</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_axes_unit</span><span class="p">(</span><span class="s1">&#39;cm&#39;</span><span class="p">)</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">9</span><span class="p">))</span>
    <span class="c1">#grid = AxesGrid(fig, (0.075,0.075,0.85,0.85),</span>
    <span class="n">grid</span> <span class="o">=</span> <span class="n">AxesGrid</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="mi">121</span><span class="p">,</span>
                    <span class="n">nrows_ncols</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
                    <span class="n">axes_pad</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">,</span> <span class="n">label_mode</span> <span class="o">=</span> <span class="s2">&quot;L&quot;</span><span class="p">,</span>
                    <span class="n">share_all</span> <span class="o">=</span> <span class="kc">False</span><span class="p">,</span> <span class="n">cbar_location</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span>
                    <span class="n">cbar_mode</span><span class="o">=</span><span class="s2">&quot;each&quot;</span><span class="p">,</span> <span class="n">cbar_size</span><span class="o">=</span><span class="s2">&quot;5%&quot;</span><span class="p">,</span> <span class="n">cbar_pad</span><span class="o">=</span><span class="s2">&quot;0%&quot;</span><span class="p">)</span>
    <span class="n">plotFRB</span><span class="p">(</span><span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">grid</span><span class="o">.</span><span class="n">cbar_axes</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> 
                  <span class="n">np</span><span class="o">.</span><span class="n">flipud</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">transpose</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">frb</span><span class="p">[</span><span class="n">topfield</span><span class="p">])),</span> 
                  <span class="n">tlims</span><span class="p">,</span> <span class="n">linear</span><span class="o">=</span><span class="n">lintop</span><span class="p">)</span>
    <span class="n">plotFRB</span><span class="p">(</span><span class="n">grid</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">grid</span><span class="o">.</span><span class="n">cbar_axes</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> 
                  <span class="n">np</span><span class="o">.</span><span class="n">fliplr</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">transpose</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">frb</span><span class="p">[</span><span class="n">botfield</span><span class="p">])),</span> 
                  <span class="n">blims</span><span class="p">,</span> 
                  <span class="n">top</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">linear</span><span class="o">=</span><span class="n">linbot</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">mhead</span><span class="p">:</span>
        <span class="c1"># we&#39;ve transposed the matrix, so flip the _match positions</span>
        <span class="n">x_match</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;y_match&#39;</span><span class="p">]</span>
        <span class="n">y_match</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;x_match&#39;</span><span class="p">]</span>
        <span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x_match</span><span class="p">,</span> <span class="n">y_match</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
        <span class="n">grid</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x_match</span><span class="p">,</span> <span class="n">y_match</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
    <span class="n">grid</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s2">&quot;Time: </span><span class="si">{:.5f}</span><span class="s2"> s&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">current_time</span><span class="p">)),</span>
                          <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.75</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.17</span><span class="p">),</span> <span class="n">textcoords</span><span class="o">=</span><span class="s1">&#39;axes fraction&#39;</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">show</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">fig</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameter_filename</span><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">:]</span>
        <span class="n">otpf</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">fullpath</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">name</span><span class="p">:</span>
            <span class="n">tag</span> <span class="o">=</span> <span class="n">name</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">tag</span> <span class="o">=</span> <span class="s1">&#39;bifold&#39;</span>
        <span class="n">savn</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{}{}</span><span class="s1">.png&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tag</span><span class="p">,</span> <span class="n">num</span><span class="p">)</span>
        <span class="n">savf</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">)</span>
        <span class="n">savp</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="p">,</span> <span class="n">savn</span><span class="p">)</span>
        <span class="c1"># build filetree and show or save the figure</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">savf</span><span class="p">):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">savf</span><span class="p">)</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="k">elif</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">)):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">close</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>
        <span class="nb">print</span> <span class="s2">&quot;Wrote: </span><span class="si">{}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span></div>


<span class="k">def</span> <span class="nf">plotFRB</span><span class="p">(</span><span class="n">gridAx</span><span class="p">,</span> <span class="n">cbgAx</span><span class="p">,</span> <span class="n">imArr</span><span class="p">,</span> <span class="n">lims</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">linear</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="n">unit</span> <span class="o">=</span> <span class="n">imArr</span><span class="o">.</span><span class="n">units</span>
    <span class="n">field</span> <span class="o">=</span> <span class="n">imArr</span><span class="o">.</span><span class="n">info</span><span class="p">[</span><span class="s1">&#39;field&#39;</span><span class="p">]</span>
    <span class="n">yl</span><span class="p">,</span> <span class="n">yr</span> <span class="o">=</span> <span class="n">imArr</span><span class="o">.</span><span class="n">info</span><span class="p">[</span><span class="s1">&#39;ylim&#39;</span><span class="p">]</span>
    <span class="n">xl</span><span class="p">,</span> <span class="n">xr</span> <span class="o">=</span> <span class="n">imArr</span><span class="o">.</span><span class="n">info</span><span class="p">[</span><span class="s1">&#39;xlim&#39;</span><span class="p">]</span>
    <span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span> <span class="o">=</span> <span class="n">lims</span>
    <span class="k">if</span> <span class="n">linear</span><span class="p">:</span>
        <span class="n">norm</span> <span class="o">=</span> <span class="n">NoNorm</span><span class="p">(</span><span class="n">vmin</span><span class="o">=</span><span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">norm</span> <span class="o">=</span> <span class="n">LogNorm</span><span class="p">(</span><span class="n">vmin</span><span class="o">=</span><span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">top</span><span class="p">:</span>
        <span class="n">im</span> <span class="o">=</span> <span class="n">gridAx</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">imArr</span><span class="p">,</span> 
                           <span class="n">cmap</span><span class="o">=</span><span class="n">cmap</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="s1">&#39;auto&#39;</span><span class="p">,</span> 
                           <span class="n">extent</span><span class="o">=</span><span class="p">[</span><span class="n">yl</span><span class="p">,</span> <span class="n">yr</span><span class="p">,</span> <span class="n">xl</span><span class="p">,</span> <span class="n">xr</span><span class="p">],</span> <span class="c1"># horizontal mi/ma vertical mi/ma</span>
                           <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">)</span>
        <span class="n">yticks</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">get_major_ticks</span><span class="p">()</span>
        <span class="n">yticks</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">label</span><span class="o">.</span><span class="n">set_visible</span><span class="p">(</span><span class="kc">False</span><span class="p">)</span>
        <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="n">bottom</span><span class="o">=</span><span class="s1">&#39;off&#39;</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">im</span> <span class="o">=</span> <span class="n">gridAx</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">imArr</span><span class="p">,</span> 
                           <span class="n">cmap</span><span class="o">=</span><span class="n">cmap</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="s1">&#39;auto&#39;</span><span class="p">,</span> 
                           <span class="n">extent</span><span class="o">=</span><span class="p">[</span><span class="n">yr</span><span class="p">,</span> <span class="n">yl</span><span class="p">,</span> <span class="n">xr</span><span class="p">,</span> <span class="n">xl</span><span class="p">],</span> <span class="n">norm</span><span class="o">=</span><span class="n">norm</span><span class="p">)</span>
        <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="s1">&#39;off&#39;</span><span class="p">)</span>
    
    <span class="c1"># get order of mag of highest y value and rescale the ticks</span>
    <span class="c1">#print im.get_extent()</span>
    <span class="n">scaling</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">xr</span><span class="o">.</span><span class="n">value</span><span class="p">)))</span>
    <span class="c1">#scaling = int(np.log10(abs(im.get_extent()[3].value)))</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">customFormatter</span><span class="p">(</span><span class="n">scaling</span><span class="p">))</span>
    <span class="c1"># yt flips axes, plus imarray is transposed, this must be an hdf5 saving issue</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;x ($10^{{</span><span class="si">{}</span><span class="s1">}}$ cm)&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">scaling</span><span class="p">))</span>
    
    <span class="c1"># get order of mag of highest x value and rescale the ticks</span>
    <span class="c1">#scaling = int(np.log10(abs(im.get_extent()[1].value)))</span>
    <span class="n">scaling</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">yr</span><span class="o">.</span><span class="n">value</span><span class="p">)))</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">customFormatter</span><span class="p">(</span><span class="n">scaling</span><span class="p">))</span>
    <span class="c1"># yt flips axes, plus imarray is transposed, this must be an hdf5 saving issue</span>
    <span class="n">im</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;y ($10^{{</span><span class="si">{}</span><span class="s1">}}$ cm)&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">scaling</span><span class="p">))</span>
    
    <span class="n">scaling</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">get_clim</span><span class="p">())))</span>
    <span class="n">cax</span> <span class="o">=</span> <span class="n">cbgAx</span><span class="o">.</span><span class="n">colorbar</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="nb">format</span><span class="o">=</span><span class="n">customFormatter</span><span class="p">(</span><span class="n">scaling</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">prec</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
    <span class="n">cax</span><span class="o">.</span><span class="n">set_label_text</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1"> ($10^{{</span><span class="si">{}</span><span class="s1">}} </span><span class="si">{}</span><span class="s1">$)&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">field</span><span class="o">.</span><span class="n">capitalize</span><span class="p">(),</span>
                                                <span class="n">scaling</span><span class="p">,</span>  
                                                <span class="nb">str</span><span class="p">(</span><span class="n">unit</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;**&#39;</span><span class="p">,</span> <span class="s1">&#39;^&#39;</span><span class="p">)),</span>
                        <span class="n">fontsize</span><span class="o">=</span><span class="mf">11.0</span><span class="p">)</span>
    <span class="n">yticks</span> <span class="o">=</span> <span class="n">cax</span><span class="o">.</span><span class="n">ax</span><span class="o">.</span><span class="n">get_yticklabels</span><span class="p">()</span>
    <span class="n">yticks</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">set_visible</span><span class="p">(</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">yticks</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">set_visible</span><span class="p">(</span><span class="kc">False</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">im</span><span class="p">,</span> <span class="n">cax</span>


<div class="viewcode-block" id="mainProps"><a class="viewcode-back" href="../index.xhtml#twoDim.mainProps">[docs]</a><span class="k">def</span> <span class="nf">mainProps</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="n">mhead</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">grids</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
              <span class="n">fields</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;density&#39;</span><span class="p">,</span> <span class="s1">&#39;pressure&#39;</span><span class="p">,</span> <span class="s1">&#39;temperature&#39;</span><span class="p">],</span> <span class="n">linear</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> 
              <span class="n">mins</span><span class="o">=</span><span class="p">[</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">1e+16</span><span class="p">,</span> <span class="mf">3e7</span><span class="p">],</span> <span class="n">maxs</span><span class="o">=</span><span class="p">[</span><span class="mf">4e7</span><span class="p">,</span> <span class="mf">6e+24</span><span class="p">,</span> <span class="mf">2e9</span><span class="p">]):</span>
    <span class="sd">&quot;&quot;&quot;Plots the list of fields specified in yt.</span>
<span class="sd">    </span>
<span class="sd">    Args:</span>
<span class="sd">        fname (str): filename to plot.</span>
<span class="sd">        mhead (bool): mark the position of the matchhead.</span>
<span class="sd">        grids (bool): overplot the grid structure.</span>
<span class="sd">        show (bool): return figure (true) or save to file (false)</span>
<span class="sd">        fields (list of str): list of named fields to plot.</span>
<span class="sd">        linear (bool): set linear or log scale(false).</span>
<span class="sd">        mins (list of float): minima of scale for each field.</span>
<span class="sd">        maxs (list of float): maxima of scale for each field.</span>
<span class="sd">    </span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span>
    <span class="n">size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">fields</span><span class="p">)</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="o">*</span><span class="n">size</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
    <span class="n">grid</span> <span class="o">=</span> <span class="n">AxesGrid</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="mf">0.075</span><span class="p">,</span><span class="mf">0.075</span><span class="p">,</span><span class="mf">0.85</span><span class="p">,</span><span class="mf">0.85</span><span class="p">),</span>
                    <span class="n">nrows_ncols</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">size</span><span class="p">),</span>
                    <span class="n">axes_pad</span> <span class="o">=</span> <span class="mf">1.2</span><span class="p">,</span> <span class="n">label_mode</span> <span class="o">=</span> <span class="s2">&quot;L&quot;</span><span class="p">,</span>
                    <span class="n">share_all</span> <span class="o">=</span> <span class="kc">True</span><span class="p">,</span> <span class="n">cbar_location</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span>
                    <span class="n">cbar_mode</span><span class="o">=</span><span class="s2">&quot;each&quot;</span><span class="p">,</span> <span class="n">cbar_size</span><span class="o">=</span><span class="s2">&quot;10%&quot;</span><span class="p">,</span> <span class="n">cbar_pad</span><span class="o">=</span><span class="s2">&quot;0%&quot;</span><span class="p">)</span>
    <span class="n">p</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">SlicePlot</span><span class="p">(</span><span class="n">ds</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">,</span> <span class="nb">list</span><span class="p">(</span><span class="n">fields</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_width</span><span class="p">((</span><span class="n">plR</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">plR</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_center</span><span class="p">((</span><span class="n">plR</span><span class="o">*</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_origin</span><span class="p">((</span><span class="s2">&quot;center&quot;</span><span class="p">,</span> <span class="s2">&quot;left&quot;</span><span class="p">,</span> <span class="s2">&quot;domain&quot;</span><span class="p">))</span>
    <span class="n">p</span><span class="o">.</span><span class="n">set_axes_unit</span><span class="p">(</span><span class="s1">&#39;cm&#39;</span><span class="p">)</span>
    <span class="n">header</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{:17.6f}</span><span class="s1"> s&#39;</span>
    <span class="k">if</span> <span class="n">mhead</span><span class="p">:</span>
        <span class="n">x_match</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;x_match&#39;</span><span class="p">]</span>
        <span class="n">y_match</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;y_match&#39;</span><span class="p">]</span>
        <span class="n">p</span><span class="o">.</span><span class="n">annotate_marker</span><span class="p">((</span><span class="n">x_match</span><span class="p">,</span> <span class="n">y_match</span><span class="p">),</span> <span class="n">coord_system</span><span class="o">=</span><span class="s1">&#39;plot&#39;</span><span class="p">,</span>
                          <span class="n">plot_args</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;color&#39;</span><span class="p">:</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;s&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">})</span>
    <span class="k">if</span> <span class="n">grids</span><span class="p">:</span>
        <span class="n">p</span><span class="o">.</span><span class="n">annotate_grids</span><span class="p">()</span>
    <span class="n">pvars</span> <span class="o">=</span> <span class="nb">zip</span><span class="p">(</span><span class="n">fields</span><span class="p">,</span> <span class="n">mins</span><span class="p">,</span> <span class="n">maxs</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">mi</span><span class="p">,</span> <span class="n">mx</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">pvars</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">i</span><span class="p">:</span>
            <span class="n">p</span><span class="o">.</span><span class="n">annotate_title</span><span class="p">(</span><span class="n">header</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">current_time</span><span class="p">)))</span>
        <span class="n">p</span><span class="o">.</span><span class="n">set_cmap</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="s1">&#39;custom&#39;</span><span class="p">)</span>
        <span class="n">p</span><span class="o">.</span><span class="n">set_zlim</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">mi</span><span class="p">,</span> <span class="n">mx</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">linear</span><span class="p">:</span>
            <span class="n">p</span><span class="o">.</span><span class="n">set_log</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="kc">False</span><span class="p">)</span>
        <span class="n">plot</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">plots</span><span class="p">[</span><span class="n">f</span><span class="p">]</span>
       <span class="c1"># plot.figure = fig</span>
        <span class="n">plot</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="n">grid</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">axes</span>
        <span class="n">plot</span><span class="o">.</span><span class="n">cax</span> <span class="o">=</span> <span class="n">grid</span><span class="o">.</span><span class="n">cbar_axes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
    <span class="n">p</span><span class="o">.</span><span class="n">_setup_plots</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">show</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">fig</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameter_filename</span><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">:]</span>
        <span class="n">otpf</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">fullpath</span><span class="p">)</span>
        <span class="n">tag</span> <span class="o">=</span> <span class="s1">&#39;ytprops&#39;</span>
        <span class="n">savn</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{}{}</span><span class="s1">.png&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tag</span><span class="p">,</span> <span class="n">num</span><span class="p">)</span>
        <span class="n">savf</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">)</span>
        <span class="n">savp</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="p">,</span> <span class="n">savn</span><span class="p">)</span>
        <span class="c1"># build filetree and show or save the figure</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">savf</span><span class="p">):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">savf</span><span class="p">)</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="k">elif</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">)):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">close</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>
        <span class="nb">print</span> <span class="s2">&quot;Wrote: </span><span class="si">{}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span></div>


<div class="viewcode-block" id="fileProfile"><a class="viewcode-back" href="../index.xhtml#twoDim.fileProfile">[docs]</a><span class="k">def</span> <span class="nf">fileProfile</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="n">species</span><span class="o">=</span><span class="n">ap13</span><span class="p">,</span> <span class="n">thresh</span><span class="o">=</span><span class="mf">1e-6</span><span class="p">,</span> <span class="n">mrange</span><span class="o">=</span><span class="p">[</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">],</span> <span class="n">angle</span><span class="o">=</span><span class="mi">45</span><span class="p">,</span> <span class="n">radius</span><span class="o">=</span><span class="mf">5e9</span><span class="p">,</span> <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;plots a checkpoint file ray through the domain.</span>
<span class="sd">    </span>
<span class="sd">    Args:</span>
<span class="sd">        fname (str): filename of checkpoint.</span>
<span class="sd">        species (list of str): list of species names to plot.</span>
<span class="sd">        thresh (float): ymin for species fraction plot.</span>
<span class="sd">        mrange (list of float): if set, change the mass range of the abundance plot.</span>
<span class="sd">        angle (float): angle of ray in degrees (measured from +y towards +x).</span>
<span class="sd">        radius (float): reach of ray.</span>
<span class="sd">        show (bool): return figure instead of saving it to file.</span>
<span class="sd">    </span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="k">if</span> <span class="s1">&#39;chk&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">fname</span><span class="p">:</span>
        <span class="nb">print</span> <span class="s2">&quot;Not a checkpoint, skipping abundance plots&quot;</span>
        <span class="n">plotsp</span> <span class="o">=</span> <span class="kc">False</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">plotsp</span> <span class="o">=</span> <span class="kc">True</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span>
    <span class="n">cname</span> <span class="o">=</span> <span class="s1">&#39;radius&#39;</span>
    <span class="n">ray</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">ray</span><span class="p">([</span><span class="mf">0e5</span><span class="p">,</span> <span class="mf">0e5</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="p">,</span> <span class="p">[</span><span class="n">radius</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">sin</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">radians</span><span class="p">(</span><span class="n">angle</span><span class="p">)),</span> <span class="n">radius</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">cos</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">radians</span><span class="p">(</span><span class="n">angle</span><span class="p">)),</span> <span class="mi">0</span><span class="p">])</span>
    <span class="n">ray_sort</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argsort</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;t&#39;</span><span class="p">])</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">plotsp</span><span class="p">:</span>
        <span class="c1">#layout = (3, 3) # extra plot space for legend spacing</span>
        <span class="n">layout</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
        <span class="n">ax4</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot2grid</span><span class="p">(</span><span class="n">layout</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="n">aspect</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span> <span class="n">adjustable</span><span class="o">=</span><span class="s1">&#39;box-forced&#39;</span><span class="p">,</span> <span class="n">rowspan</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">layout</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot2grid</span><span class="p">(</span><span class="n">layout</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">aspect</span><span class="o">=</span><span class="s1">&#39;auto&#39;</span><span class="p">)</span>
    <span class="n">ax2</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot2grid</span><span class="p">(</span><span class="n">layout</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">aspect</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span> <span class="n">adjustable</span><span class="o">=</span><span class="s1">&#39;box-forced&#39;</span><span class="p">)</span>
    <span class="n">ax3</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot2grid</span><span class="p">(</span><span class="n">layout</span><span class="p">,</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">aspect</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span> <span class="n">adjustable</span><span class="o">=</span><span class="s1">&#39;box-forced&#39;</span><span class="p">)</span>

    <span class="n">ax1</span><span class="o">.</span><span class="n">loglog</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="n">cname</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">ray</span><span class="p">[</span><span class="s1">&#39;density&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
    <span class="n">ax1</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;Density($g/cm^3$)&#39;</span><span class="p">)</span>
    <span class="n">ax1</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;Radius ($cm$)&#39;</span><span class="p">)</span>
    <span class="n">ax1</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:.2e}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax1</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">{:.5f}</span><span class="s2"> s&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">current_time</span><span class="p">)),</span>
                 <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">),</span> <span class="n">xytext</span><span class="o">=</span><span class="p">(</span><span class="mf">0.05</span><span class="p">,</span> <span class="mf">0.15</span><span class="p">),</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span>
                 <span class="n">textcoords</span><span class="o">=</span><span class="s1">&#39;axes fraction&#39;</span><span class="p">,</span> <span class="n">xycoords</span><span class="o">=</span><span class="s1">&#39;axes fraction&#39;</span><span class="p">)</span>

    <span class="n">ax2</span><span class="o">.</span><span class="n">loglog</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="n">cname</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">ray</span><span class="p">[</span><span class="s1">&#39;temperature&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;red&#39;</span><span class="p">)</span>
    <span class="n">ax2</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;Temperature($K$)&#39;</span><span class="p">)</span>
    <span class="n">ax2</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;Radius ($cm$)&#39;</span><span class="p">)</span>
    <span class="n">ax2</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:.2e}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="n">ax2</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">))</span>
    
    <span class="n">ax3</span><span class="o">.</span><span class="n">loglog</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="n">cname</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">ray</span><span class="p">[</span><span class="s1">&#39;pressure&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;blue&#39;</span><span class="p">)</span>
    <span class="n">ax3</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;Pressure($dyne/cm^2$)&#39;</span><span class="p">)</span>
    <span class="n">ax3</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;Radius ($cm$)&#39;</span><span class="p">)</span>
    <span class="n">ax3</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_formatter</span><span class="p">(</span><span class="n">StrMethodFormatter</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{x:.2e}</span><span class="s1">&#39;</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">plotsp</span><span class="p">:</span>
        <span class="c1"># sort by atomic weight</span>
        <span class="n">aws</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">species</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">s</span><span class="o">==</span><span class="s1">&#39;n   &#39;</span><span class="p">:</span>
                <span class="n">aws</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">s</span><span class="o">==</span><span class="s1">&#39;p   &#39;</span><span class="p">:</span>
                <span class="n">aws</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">s</span><span class="o">==</span><span class="s1">&#39;d   &#39;</span><span class="p">:</span>
                <span class="n">aws</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">aws</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">c</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">s</span> <span class="k">if</span> <span class="n">c</span><span class="o">.</span><span class="n">isdigit</span><span class="p">()])))</span>
        <span class="n">species</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">aws</span><span class="p">,</span> <span class="n">species</span><span class="p">))</span>
        <span class="n">styleIter</span> <span class="o">=</span> <span class="n">colIter</span><span class="p">()</span>
        <span class="c1"># don&#39;t skip any plot to ensure colors stick to species, and legend doesn&#39;t </span>
        <span class="c1"># shapeshift.</span>
        <span class="n">xs</span> <span class="o">=</span> <span class="n">byMass</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="n">cname</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">ray</span><span class="p">[</span><span class="s1">&#39;density&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">])</span>
        <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">[</span><span class="n">sp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">sp</span> <span class="ow">in</span> <span class="n">species</span><span class="p">]:</span>
            <span class="n">tag</span> <span class="o">=</span> <span class="s1">&#39;$^{{</span><span class="si">{}</span><span class="s1">}}</span><span class="si">{}</span><span class="s1">$&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="o">*</span><span class="n">elemSplit</span><span class="p">(</span><span class="n">s</span><span class="p">))</span>
            <span class="n">c</span><span class="p">,</span> <span class="n">ls</span> <span class="o">=</span> <span class="n">styleIter</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
            <span class="n">ax4</span><span class="o">.</span><span class="n">semilogy</span><span class="p">(</span><span class="n">xs</span><span class="p">,</span> <span class="n">ray</span><span class="p">[</span><span class="n">s</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">label</span><span class="o">=</span><span class="n">tag</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">c</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="n">ls</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span><span class="p">)</span>
        <span class="n">lgd</span> <span class="o">=</span> <span class="n">ax4</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">ncol</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper left&#39;</span><span class="p">,</span> <span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">),</span> 
          <span class="n">columnspacing</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">labelspacing</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">markerfirst</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> 
          <span class="n">numpoints</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">mrange</span><span class="p">)</span><span class="o">!=</span><span class="mf">0.0</span><span class="p">:</span>
            <span class="n">ax4</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="n">mrange</span><span class="p">)</span>
        <span class="n">ax4</span><span class="o">.</span><span class="n">axhline</span><span class="p">(</span><span class="mf">1e0</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
        <span class="n">ax4</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="n">thresh</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">)</span>
        <span class="n">ax4</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;Mass ($M_{\odot}$)&#39;</span><span class="p">)</span>
        <span class="n">ax4</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;$X_</span><span class="si">{frac}</span><span class="s1">$&#39;</span><span class="p">)</span>
    <span class="c1">#plt.tight_layout()</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">(</span><span class="n">pad</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">h_pad</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span> <span class="n">w_pad</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">rect</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.67</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">show</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">fig</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameter_filename</span><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">:]</span>
        <span class="n">otpf</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">fullpath</span><span class="p">)</span>
        <span class="n">tag</span> <span class="o">=</span> <span class="s1">&#39;prof&#39;</span>
        <span class="n">savn</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{}{}</span><span class="s1">.png&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tag</span><span class="p">,</span> <span class="n">num</span><span class="p">)</span>
        <span class="n">savf</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">)</span>
        <span class="n">savp</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">otpf</span><span class="p">,</span> <span class="s2">&quot;png&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="p">,</span> <span class="n">savn</span><span class="p">)</span>
        <span class="c1"># build filetree and show or save the figure</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">savf</span><span class="p">):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">savf</span><span class="p">)</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="k">elif</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">)):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">savf</span><span class="p">,</span> <span class="n">tag</span><span class="p">))</span>
        <span class="c1">#plt.savefig(savp)</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="n">savp</span><span class="p">,</span>  <span class="n">bbox_extra_artists</span><span class="o">=</span><span class="p">(</span><span class="n">lgd</span><span class="p">,),</span> <span class="n">bbox_inches</span><span class="o">=</span><span class="s1">&#39;tight&#39;</span><span class="p">)</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">close</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>
        <span class="nb">print</span> <span class="s2">&quot;Wrote: </span><span class="si">{}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">savp</span><span class="p">)</span></div>

<span class="c1"># utility functions</span>
<span class="k">def</span> <span class="nf">roughCJ</span><span class="p">(</span><span class="n">ray</span><span class="p">,</span> <span class="n">point</span><span class="p">):</span>
    <span class="n">ray_sort</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argsort</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;t&#39;</span><span class="p">])</span> <span class="c1"># not time, this is a grid variable for ordering points</span>
    <span class="n">dp</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;pressure&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">point</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;pressure&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">point</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">nu1</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">/</span><span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;density&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">point</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">nu2</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">/</span><span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;density&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">point</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">dnu</span> <span class="o">=</span> <span class="p">(</span><span class="n">nu1</span><span class="o">-</span><span class="n">nu2</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">nu1</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
    <span class="nb">print</span> <span class="n">dp</span><span class="p">,</span> <span class="n">nu1</span><span class="p">,</span> <span class="n">nu2</span><span class="p">,</span> <span class="n">dnu</span>
    <span class="n">svel</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">dp</span><span class="o">/</span><span class="n">dnu</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">svel</span>


<div class="viewcode-block" id="locateShock"><a class="viewcode-back" href="../index.xhtml#twoDim.locateShock">[docs]</a><span class="k">def</span> <span class="nf">locateShock</span><span class="p">(</span><span class="n">ray</span><span class="p">,</span> <span class="n">vvv</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;returns index within ray of detected shock.&quot;&quot;&quot;</span>
    <span class="n">ray_sort</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argsort</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;t&#39;</span><span class="p">])</span>
    <span class="c1"># build reference vectors</span>
    <span class="n">igr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">((</span><span class="n">ray</span><span class="o">.</span><span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;x_match&#39;</span><span class="p">],</span> <span class="n">ray</span><span class="o">.</span><span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;y_match&#39;</span><span class="p">],</span> <span class="n">ray</span><span class="o">.</span><span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;z_match&#39;</span><span class="p">]))</span>
    <span class="n">r</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">((</span><span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;x&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span> <span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;y&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span> <span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;z&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">])))</span>
    <span class="n">cross</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cross</span><span class="p">(</span><span class="n">igr</span><span class="p">,</span><span class="n">r</span><span class="p">))</span>
    <span class="n">dot</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">dot</span><span class="p">(</span><span class="n">igr</span><span class="p">,</span> <span class="n">r</span><span class="p">))</span>
    <span class="n">angle</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arctan</span><span class="p">(</span><span class="n">cross</span><span class="o">/</span><span class="n">dot</span><span class="p">)</span>

    <span class="n">spx</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">cos</span><span class="p">(</span><span class="n">angle</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">igr</span><span class="p">)</span>
    <span class="n">filt</span><span class="p">,</span> <span class="n">offs1</span> <span class="o">=</span> <span class="n">split</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">spx</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>
    <span class="n">shockin</span> <span class="o">=</span> <span class="n">shock1D</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">filt</span><span class="p">],</span> <span class="n">ray</span><span class="p">[</span><span class="s1">&#39;sound_speed&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">filt</span><span class="p">][:</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="kc">True</span><span class="p">)</span>
    <span class="n">filt</span><span class="p">,</span> <span class="n">offs2</span> <span class="o">=</span> <span class="n">split</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">],</span> <span class="n">spx</span><span class="p">,</span> <span class="kc">False</span><span class="p">)</span>
    <span class="n">shockout</span> <span class="o">=</span> <span class="n">shock1D</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">filt</span><span class="p">],</span> <span class="n">ray</span><span class="p">[</span><span class="s1">&#39;sound_speed&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">filt</span><span class="p">][:</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="kc">False</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">vvv</span><span class="p">:</span>
        <span class="nb">print</span> <span class="s1">&#39;Ray: &#39;</span><span class="p">,</span> <span class="n">r</span>
        <span class="nb">print</span> <span class="s1">&#39;Ignition Center: &#39;</span><span class="p">,</span> <span class="n">igr</span>
        <span class="nb">print</span> <span class="s1">&#39;Angle: &#39;</span><span class="p">,</span> <span class="n">angle</span>
        <span class="nb">print</span> <span class="s1">&#39;Inward Shock at: </span><span class="si">{:E}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">shockin</span><span class="o">+</span><span class="n">offs1</span><span class="p">]))</span>
        <span class="nb">print</span> <span class="s1">&#39;Outward Shock at: </span><span class="si">{:E}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;radius&#39;</span><span class="p">][</span><span class="n">ray_sort</span><span class="p">][</span><span class="n">shockout</span><span class="o">+</span><span class="n">offs2</span><span class="p">]))</span>
    <span class="k">return</span> <span class="n">shockin</span><span class="o">+</span><span class="n">offs1</span><span class="p">,</span> <span class="n">shockout</span><span class="o">+</span><span class="n">offs2</span></div>


<div class="viewcode-block" id="shock1D"><a class="viewcode-back" href="../index.xhtml#twoDim.shock1D">[docs]</a><span class="k">def</span> <span class="nf">shock1D</span><span class="p">(</span><span class="n">rad</span><span class="p">,</span> <span class="n">soundspeeds</span><span class="p">,</span> <span class="n">inward</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;finds a shock in an array by detecting the last </span>
<span class="sd">    large variation within it that is larger than the mean of deltas.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">dr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">rad</span><span class="p">)[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">soundspeeds</span><span class="p">)</span>
    <span class="n">div</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">nan_to_num</span><span class="p">(</span><span class="n">ds</span><span class="o">/</span><span class="n">dr</span><span class="p">)</span>
    <span class="n">accel</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">abs</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan_to_num</span><span class="p">(</span><span class="n">ds</span><span class="o">/</span><span class="n">dr</span><span class="p">))</span>
    <span class="n">mean</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">accel</span><span class="p">)</span>
    <span class="n">pertp</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">accel</span><span class="o">&gt;</span><span class="n">mean</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">inward</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">pertp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">pertp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span></div>


<div class="viewcode-block" id="getRay"><a class="viewcode-back" href="../index.xhtml#twoDim.getRay">[docs]</a><span class="k">def</span> <span class="nf">getRay</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="p">[</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">],</span> <span class="n">radius</span><span class="o">=</span><span class="mf">5e9</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;returns a ray trace through the domain.&quot;&quot;&quot;</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span>
    <span class="n">ray</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">ray</span><span class="p">([</span><span class="mf">0e5</span><span class="p">,</span> <span class="mf">0e5</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">direction</span><span class="p">)</span><span class="o">*</span><span class="n">radius</span><span class="p">)</span>
    <span class="n">ray_sort</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argsort</span><span class="p">(</span><span class="n">ray</span><span class="p">[</span><span class="s1">&#39;t&#39;</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">ray</span><span class="p">,</span> <span class="n">ray_sort</span></div>


<div class="viewcode-block" id="customFormatter"><a class="viewcode-back" href="../index.xhtml#twoDim.customFormatter">[docs]</a><span class="k">def</span> <span class="nf">customFormatter</span><span class="p">(</span><span class="n">factor</span><span class="p">,</span> <span class="n">prec</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">2</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;specialized format for plotting labels:</span>
<span class="sd">    width(prec) x 10^factor.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">fstr</span> <span class="o">=</span> <span class="s1">&#39;{:</span><span class="si">{width}</span><span class="s1">.</span><span class="si">{prec}</span><span class="s1">f}&#39;</span>
    <span class="n">exp</span> <span class="o">=</span> <span class="mf">10.0</span><span class="o">**</span><span class="n">factor</span>
    <span class="k">return</span> <span class="n">FuncFormatter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">pos</span><span class="p">:</span><span class="n">fstr</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">x</span><span class="o">/</span><span class="n">exp</span><span class="p">,</span> 
                                                   <span class="n">width</span><span class="o">=</span><span class="n">width</span><span class="p">,</span> 
                                                   <span class="n">prec</span><span class="o">=</span><span class="n">prec</span><span class="p">))</span></div>


<div class="viewcode-block" id="getExtrema"><a class="viewcode-back" href="../index.xhtml#twoDim.getExtrema">[docs]</a><span class="k">def</span> <span class="nf">getExtrema</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">flist</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;density&#39;</span><span class="p">,</span> <span class="s1">&#39;temperature&#39;</span><span class="p">,</span> <span class="s1">&#39;pressure&#39;</span><span class="p">]):</span>
    <span class="sd">&quot;&quot;&quot;returns a list of tuples with extrema for given fields(flist).&quot;&quot;&quot;</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="n">ad</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="n">all_data</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">ad</span><span class="o">.</span><span class="n">quantities</span><span class="o">.</span><span class="n">extrema</span><span class="p">(</span><span class="n">flist</span><span class="p">)</span></div>


<div class="viewcode-block" id="gridInfo"><a class="viewcode-back" href="../index.xhtml#twoDim.gridInfo">[docs]</a><span class="k">def</span> <span class="nf">gridInfo</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">silent</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;prints checkpoint file grid stats </span>
<span class="sd">    through yt.print_stats() method.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">ds</span> <span class="o">=</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">silent</span><span class="p">:</span>
        <span class="n">ds</span><span class="o">.</span><span class="n">print_stats</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">ds</span><span class="o">.</span><span class="n">parameters</span><span class="p">,</span> <span class="nb">float</span><span class="p">(</span><span class="n">ds</span><span class="o">.</span><span class="n">current_time</span><span class="p">)</span></div>

<span class="c1"># auxiliary functions</span>
<div class="viewcode-block" id="getDset"><a class="viewcode-back" href="../index.xhtml#twoDim.getDset">[docs]</a><span class="k">def</span> <span class="nf">getDset</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Returns the yt dataset (not compatible with batch/parallel scripts)&quot;&quot;&quot;</span>
    <span class="k">return</span> <span class="n">yt</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>